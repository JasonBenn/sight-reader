{"version":3,"sources":["index.js"],"names":[],"mappings":"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","file":"index-compiled.js","sourcesContent":["// import _ from 'lodash'\n// import $ from 'jquery'\n\nconst EQUIVALENTS = {\n  db: 'c#',\n  eb: 'd#',\n  fb: 'e',\n  gb: 'f#',\n  ab: 'g#',\n  bb: 'a#',\n  cb: 'b'\n}\n\nlet notesHistory = []\nlet cursor = -1\nlet notesToPractice = 100\nlet notesLeft = notesToPractice\nlet errors = 0\nlet startTime\n\nconst KEYS = {\n  A: 65,\n  B: 66,\n  F: 70,\n  SPACE: 32\n}\n\nconst previousNotes = () => {\n  cursor = Math.max(cursor - 1, 0)\n  display(notesHistory[cursor])\n}\n\nconst nextNotes = (toPractice, { mode }) => {\n  console.log(toPractice)\n  let notes\n  if (mode === 'sequence') {\n    notes = toPractice.shift()\n  } else {\n    notes = _.sample(toPractice)\n  }\n  notesHistory.push(notes)\n  cursor += 1\n  console.log(notes)\n  display(notesHistory[cursor])\n}\n\nconst playNotes = () => {\n  _.values(notesHistory[cursor]).forEach(note => {\n    if (EQUIVALENTS[note.slice(1)]) {\n      note = note[0] + EQUIVALENTS[note.slice(1)]\n    }\n    console.log('playing', note)\n    // new Audio('./pianonotes/' + note + '.mp3').play()\n  })\n}\n\nconst display = notes => {\n  $('.note').remove()\n  $('.current-notes').text('')\n\n  if (notes.l) _.each(notes.l, appendLeftHandNote)\n  if (notes.r) _.each(notes.r, appendRightHandNote)\n}\n\nconst STEP = 19.75\nconst RIGHT_HAND_MIDDLE_C_TOP = 235.5\nconst LEFT_HAND_MIDDLE_C_TOP = 366\nconst MIDDLE_C_MIDI_KEY_CODE = 60\nconst NOTE_OFFSETS = {\n  c: 0,\n  'c#': 1, db: 1,\n  d: 2,\n  'd#': 3, eb: 3,\n  e: 4,\n  f: 5,\n  'f#': 6, gb: 6,\n  g: 7,\n  'g#': 8, ab: 8,\n  a: 9,\n  'a#': 10, bb: 10,\n  b: 11\n}\n\n// midiKeyCodes: int. MIDI code for piano keys.\n// but i need to figure out which are left or right hand.\n\n// noteCodes: str. Human-friendly way to transcribe music. Key aware.\n// good for displaying, because i only need the note for the placement and the accidental for decoration\n// Format: note (abcdefg), accidental (#, b, or n), octave (1-8), fingering (int).\n\nconst noteCodeToMidiKeyCode = noteCode => {\n  const [ match, note, accidental, octave ] = /([a-g])([b#])?(\\d)/.exec(noteCode)\n  return MIDDLE_C_MIDI_KEY_CODE + ((octave - 4) * 12) + NOTE_OFFSETS[[note, accidental].join('')]\n}\n\nconst midiKeyCodeToNoteCode = midiKeyCode => {\n  const note = _.invert(NOTE_OFFSETS)[midiKeyCode % 12]\n  const octave = Math.floor(midiKeyCode / 12) - 1\n  return note + octave\n}\n\n// console.log(midiKeyCodeToNoteCode(24), 24, 'c1')\n// console.log(midiKeyCodeToNoteCode(25), 25, 'db1')\n// console.log(midiKeyCodeToNoteCode(26), 26, 'd1')\n// console.log(midiKeyCodeToNoteCode(36), 36, 'c2')\n// console.log(midiKeyCodeToNoteCode(48), 48, 'c3')\n// console.log(midiKeyCodeToNoteCode(60), 60, 'c4')\n// console.log(midiKeyCodeToNoteCode(72), 72, 'c5')\n\n// console.log(noteCodeToMidiKeyCode('e1'), 28, 'e1')\n// console.log(noteCodeToMidiKeyCode('f1'), 29, 'f1')\n// console.log(noteCodeToMidiKeyCode('gb1'), 30, 'gb1')\n// console.log(noteCodeToMidiKeyCode('f#1'), 30, 'f#1')\n// console.log(noteCodeToMidiKeyCode('g1'), 31, 'g1')\n// console.log(noteCodeToMidiKeyCode('ab1'), 32, 'ab1')\n// console.log(noteCodeToMidiKeyCode('a1'), 33, 'a1')\n// console.log(noteCodeToMidiKeyCode('bb1'), 34, 'bb1')\n// console.log(noteCodeToMidiKeyCode('b1'), 35, 'b1')\n// console.log(noteCodeToMidiKeyCode('c2'), 36, 'c2')\n// console.log(noteCodeToMidiKeyCode('db2'), 37, 'db2')\n// console.log(noteCodeToMidiKeyCode('d2'), 38, 'd2')\n// console.log(noteCodeToMidiKeyCode('eb2'), 39, 'eb2')\n// console.log(noteCodeToMidiKeyCode('e2'), 40, 'e2')\n// console.log(noteCodeToMidiKeyCode('f2'), 41, 'f2')\n// console.log(noteCodeToMidiKeyCode('g2'), 43, 'g2')\n// console.log(noteCodeToMidiKeyCode('a2'), 45, 'a2')\n// console.log(noteCodeToMidiKeyCode('b2'), 47, 'b2')\n// console.log(noteCodeToMidiKeyCode('c2'), 36, 'c2')\n// console.log(noteCodeToMidiKeyCode('c3'), 48, 'c3')\n// console.log(noteCodeToMidiKeyCode('c4)'), 60, 'c4')\n// console.log(noteCodeToMidiKeyCode('c5'), 72, 'c5')\n// console.log(noteCodeToMidiKeyCode('c6'), 84, 'c6')\n// console.log(noteCodeToMidiKeyCode('c7'), 96, 'c7')\n// console.log(noteCodeToMidiKeyCode('g7'), 103, 'g7')\n\nconst WHITE_KEY_NOTE_OFFSETS = {\n  c: 0,\n  d: 1,\n  e: 2,\n  f: 3,\n  g: 4,\n  a: 5,\n  b: 6\n}\nconst getNoteCodeTop = (noteCode, hand) => {\n  console.log(noteCode)\n  const [ match, note, accidental, octave ] = /([a-g])([b#])?(\\d)/.exec(noteCode)\n  const steps = ((octave - 4) * 7) + WHITE_KEY_NOTE_OFFSETS[note]\n  const pxFromMiddleC = steps * -STEP\n  switch (hand) {\n    case 'l': return pxFromMiddleC + LEFT_HAND_MIDDLE_C_TOP\n    case 'r': return pxFromMiddleC + RIGHT_HAND_MIDDLE_C_TOP\n  }\n}\n\n// console.log(getNoteCodeTop(103, 'r'), 103, 'r')\n// console.log(getNoteCodeTop('c4', 'r'), 'c4', 'r')\n// console.log(getNoteCodeTop('d4', 'r'), 'd4', 'r')\n// console.log(getNoteCodeTop(103, 'l'), 103, 'l')\n// console.log(getNoteCodeTop(60, 'l'), 60, 'l')\n// console.log(getNoteCodeTop(28, 'l'), 28, 'l')\n\nconst appendNote = (hand, noteCode) => {\n  // const midiKeyCode = noteCodeToMidiKeyCode(noteCode)\n  const top = getNoteCodeTop(noteCode, hand)\n  $('.staff-container').append(`<div style=\"top: ${top}px\" class=\"note\" id=\"${noteCode}\">${noteCode}</div>`)\n}\n\nconst appendLeftHandNote = _.partial(appendNote, 'l')\nconst appendRightHandNote = _.partial(appendNote, 'r')\n\nconst revealNotes = () => {\n  $('.current-notes').text(stringifyNotes(notesHistory[cursor]))\n}\n\nconst stringifyNotes = ({ r, l }) => {\n  let leftHand, rightHand\n  if (l) leftHand = 'l: ' + l.join(', ')\n  if (r) rightHand = 'r: ' + r.join(', ')\n  return _.compact([leftHand, rightHand]).join(', ')\n}\n\nconst reportError = () => {\n  errors += 1\n}\n\nconst updateProgress = () => {\n  notesLeft -= 1\n  const notesPlayed = notesToPractice - notesLeft\n  const score = 100.0 * (notesPlayed - errors) / notesPlayed\n  if (notesLeft === 0) {\n    const timeToPlay = (Date.now() - startTime) / 1000.0\n    $('.progress').text('Score: ' + score + '%. Time: ' + timeToPlay.toFixed(1) + ' seconds')\n    document.onkeyup = null\n  } else {\n    $('.progress').text(notesLeft + ' left! Score: ' + score.toFixed(1) + '%')\n  }\n}\n\nconst onMidiMessage = msg => {\n  const [eventType, midiKeyCode, velocity] = msg.data\n  const currentNotes = _.flatten(_.values(notesHistory[cursor]))\n  const noteCode = midiKeyCodeToNoteCode(midiKeyCode)\n\n  if (_.contains(currentNotes, noteCode)) {\n    if (velocity) {\n      $('#' + noteCode).css({ borderColor: 'green' })\n    } else {\n      $('#' + noteCode).css({ borderColor: 'black' })\n    }\n  } else {\n    if (velocity) {\n      // determine hand by looking at current notes. which hand is it closer to? if only one, choose that one.\n      appendNote('r', noteCode)\n      $('#' + noteCode).css({ borderColor: 'red' })\n    } else {\n      $('#' + noteCode).remove()\n    }\n  }\n}\n\nconst onMIDISuccess = midiAccess => {\n  var inputs = midiAccess.inputs.values()\n  for (var input = inputs.next(); input && !input.done; input = inputs.next()) {\n    input.value.onmidimessage = onMidiMessage\n  }\n}\n\nconst start = (toPractice, options) => {\n  startTime = Date.now()\n  const customizedNextNotes = nextNotes.bind(null, toPractice, options)\n\n  document.onkeyup = e => {\n    switch (e.which) {\n      case KEYS.A: {\n        previousNotes()\n        break\n      }\n      case KEYS.F: {\n        updateProgress()\n        customizedNextNotes()\n        break\n      }\n      case KEYS.B: {\n        reportError()\n        updateProgress()\n        customizedNextNotes()\n        break\n      }\n      case KEYS.SPACE: {\n        revealNotes()\n        playNotes()\n        break\n      }\n    }\n  }\n\n  navigator.requestMIDIAccess().then(onMIDISuccess);\n  customizedNextNotes()\n}\n\n// const nest = any => [any]\n// const dFlatMinor = ['dFlat', 'eFlat', 'f', 'gFlat', 'aFlat', 'bFlat', 'c']\n// const dFlatMinorNotes = dFlatMinor.map(note => '4' + note).concat(dFlatMinor.map(note => '3' + note)).map(nest)\n// const dFlatMinorTrebleClef = dFlatMinor.map(note => ['4' + note]).concat([['3c'], ['3dFlat'], ['3eFlat'], ['3f'], ['3gFlat']])\n// const notesIKeepFuckingUp = ['4f', '4dFlat', '4aFlat', '3eFlat', '3dFlat'].map(nest)\n\nconst claireDeLune = [\n  // Staff 3\n  { l: ['f3', 'a3'], r: ['b3', 'e4'] },\n  // { r: ['d4'] },\n  // { r: ['e4'] },\n  // { r: ['d4'] },\n  // { l: ['e3', 'g3'], r: ['a3', 'c4'] },\n  // { l: ['a2'] },\n  // { l: ['d2', 'a2'] },\n  // { r: ['a3', 'f3'] },\n  // { l: ['a2', 'c3'] },\n  // { r: ['f5', 'a5'] },\n  // { r: ['d5', 'f5'] },\n  // { l: ['g2', 'd3'] },\n  // { l: ['d3', 'g3', 'b3', 'd4'], r: ['g4', 'b4', 'e5'] },\n  // { r: ['f5'] },\n  // { r: ['e5'] },\n  // { l: ['g2', 'd3'] },\n  // // { r: ['a4'] },\n  // { l: ['f3', 'a3'], r: ['d4', 'd5'] },\n  // { r: ['d4', 'd5'] },\n  // { l: ['d4', 'f4'], r: ['a4', 'd5', 'a5'] },\n  // { l: ['a3', 'd4'], r: ['f4', 'd5', 'g5'] },\n  // // Staff 4\n  // { l: ['g2', 'd3'], r: ['f5'] },\n  // { l: ['d3', 'g3', 'b3', 'd4'], r: ['g4', 'b4', 'e5'] },\n  // { r: ['f5'] },\n  // { r: ['e5'] },\n  // { r: ['d5'] },\n  // // { r: ['a4'] },\n  // { l: ['f3', '4bc'], r: ['d4', 'd5'] },\n  // { r: ['e4', 'e5'] },\n  // // { r: ['f5'] },\n  // { l: ['cb4', 'd4', 'f4'], r: ['b4', 'b5'] },\n  // { r: ['f4', 'f5'] },\n  // { r: ['f4', 'f5'] },\n  // { l: ['b2'] },\n  // { l: ['f3', 'b3', 'e4'], r: ['f4', 'b4', 'e5'] },\n  // { r: ['f5'] },\n  // { r: ['e5'] },\n  // { l: ['d4'], r: ['d5'] },\n  // { r: ['b4'] },\n  // // Staff 5 (epic)\n  // { l: ['e1', 'e2'] },\n\n  // { l: ['f4', 'g4', 'b4'], r: ['f5', 'b5', 'f6'] },\n\n  // { l: ['e4', 'g4', 'b4'], r: ['e5', 'b5', 'e6'] },\n  // { l: ['e4', 'g4', 'b4'], r: ['e5', 'b5', 'e6'] },\n  // { l: ['e4', 'g4', 'b4'], r: ['e5', 'b5', 'e6'] },\n\n  // { l: ['d4', 'g4', 'b4'], r: ['d5', 'b5', 'd6'] },\n  // { l: ['d4', 'g4', 'b4'], r: ['d5', 'b5', 'd6'] },\n  // { l: ['d4', 'g4', 'b4'], r: ['d5', 'b5', 'd6'] },\n\n  // { l: ['c3', 'g4', 'b4'], r: ['c5', 'g5', 'b5', 'c6'] },\n  // { l: ['c3', 'g4', 'b4'], r: ['c5', 'g5', 'b5', 'c6'] },\n  // { l: ['c3', 'g4', 'b4'], r: ['c5', 'g5', 'b5', 'c6'] },\n\n  // { l: ['d4', 'g4', 'b4'], r: ['d5', 'b5', 'd6'] },\n\n  // { l: ['b3', 'd4', 'g4'], r: ['b4', 'g5', 'b5'] },\n\n  // { l: ['e1', 'e2', 'b2'] }\n]\n\nconst translateNote = (key, noteCode) => {\n  // DOESN'T HANDLE ACCIDENTALS\n  const [ match, note, accidental, octave ] = /([a-g])([b#])?(\\d)/.exec(noteCode)\n  return [key[note], octave].join('')\n}\n\nconst translateNoteSetToKey = (key, noteSets) => {\n  const translateNoteToKey = _.partial(translateNote, key)\n  return noteSets.map(noteSet => {\n    return _.mapValues(noteSet, notes => notes.map(translateNoteToKey))\n  })\n}\n\nconst dbM = {\n  d: 'db',\n  e: 'eb',\n  f: 'f',\n  g: 'gb',\n  a: 'ab',\n  b: 'bb',\n  c: 'c'\n}\n\n// console.table(translateNoteSetToKey(dbM, claireDeLune))\n\n$(() => {\n  start(translateNoteSetToKey(dbM, claireDeLune), { mode: 'sequence' })\n})\n\n// if (require.main === module) {\n//   const test = require('tape')\n\n//   test('display notes', t => {\n//     let testCases = [\n//       ['3a', 230, { hand: 'l' }],\n//     ]\n\n//     t.plan(testCases.length)\n//     testCases.forEach(([note, expectedPlacement, { hand }]) => {\n//       t.equals(appendNote(hand, LEFT_HAND_MIDDLE_C_TOP, note), expectedPlacement)\n//     })\n//   })\n// }\n// watch \"clear && date && babel-node index.js\"\n"]}